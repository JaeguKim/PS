------------------------------
2020-06-05 Fri 11:37:17
./CodeChef/ChefAndWay.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-02 Tue 14:41:00
./template.cpp
include <bits/stdc++.h> 
define pb push_back
define mp make_pair 
define fr first
define sc second
define MOD 1000000007
define len(x) x.size()
define min3(a, b, c) min(a, min(b, c))
define max3(a, b, c) max(a, max(b, c))
define all(v) v.begin(), v.end()
define alla(a,n) a, a + n
    ifndef ONLINE_JUDGE
    endif
------------------------------------------------------------
2020-05-17 Sun 19:14:49
./Codeforces/Educational Rnd 87/a.cpp
include <bits/stdc++.h>
------------------------------------------------------------
2020-05-18 Mon 18:02:59
./Codeforces/Educational Rnd 87/a.py
테스트 케이스중간에 런타임에러가 난경우 - 분모가 영인경우
------------------------------------------------------------
2020-05-26 Tue 23:57:06
./Codeforces/div2_645/a.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-27 Wed 10:55:10
./Codeforces/div2_645/c.py
 ---- Input Functions ---- 
TLE
------------------------------------------------------------
2020-05-27 Wed 00:21:29
./Codeforces/div2_645/b.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/cookies.py
8min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/Dragons.py
16min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/chips.py
18min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/cupboards.py
7m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/Drinks.py
4min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/BeautifulMatrix.py
10min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/QueueAtSchool.py
21m 42s
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/cakeminator.py
19min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/lightsOut.py
27min 03s
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/perfactPerm.py
15m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/HQ+.py
4min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/WayTooLongWords.py
14min
more than = greater than
    print(len(line))
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/InsomniaCure.py
10min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/wordCapitalization.py
3m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/NearlyLuckyNumber.py
6m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/VasilyTheBearAndTriangle.py
25m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/translation.py
5min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/blackjack.py
24min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/UltraFastMathematician.py
5min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/PetyaAndStrings.py
7min 26s
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/I_love_username.py
10m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/theNumberOfPositions.py
9m 44sec
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/Borze.py
8m 52s
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/WizardsAndDemonstration.py
9min 35s
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/BeautifulYear.py
6m 52s
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/bit++.py
5min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/SlightlyDecresingPerm.py
26min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/PresentFromLena.py
44min -> 아이디어 생각하는데 생각보다 많이걸림
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/LunchRush.py
9min
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/FancyFence.py
38m 
생각하는 속도보다 타이핑하려는 속도가 빠르다는 것은 조급하다는 것
좀더 생각을 신속하되 정확하게 하려고 개선하자
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/Word.py
6m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/ArrivalOfGeneral.py
30m
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/CandyBags.py
42min -> 문제해석을 제대로 하자
------------------------------------------------------------
2020-06-04 Thu 23:30:06
./Codeforces/A2OJ Ladder 12/Sale.py
11min
------------------------------------------------------------
2020-05-09 Sat 10:22:41
./Codeforces/A2OJ Ladder 13/XeniaAndRingroad.py
1h 04, 완전히 잘못된 접근으로 시간지체
------------------------------------------------------------
2020-05-29 Fri 13:27:15
./Codeforces/A2OJ Ladder 13/colorStriple.cpp
include <iostream>
include <vector>
------------------------------------------------------------
2020-05-26 Tue 15:28:28
./Codeforces/A2OJ Ladder 13/routineProblem.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-17 Sun 16:15:35
./Codeforces/A2OJ Ladder 13/HungrySequence.cpp
include <bits/stdc++.h>
include <iostream>
define SIZE 10000001
------------------------------------------------------------
2020-06-02 Tue 22:46:49
./Codeforces/A2OJ Ladder 13/GeorgeAndJob.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-05-09 Sat 10:30:55
./Codeforces/A2OJ Ladder 13/luckyDivision.py
15min
------------------------------------------------------------
2020-05-13 Wed 21:09:46
./Codeforces/A2OJ Ladder 13/littlePonyAndExpectedMaximum.py
확률공부가 어느정도 되어있으면 간단한 풀이가 가능
------------------------------------------------------------
2020-05-16 Sat 18:53:32
./Codeforces/A2OJ Ladder 13/MashmokhAndACM.cpp
//include <bits/stdc++.h>
include <iostream>
include <math.h>
------------------------------------------------------------
2020-05-09 Sat 14:29:13
./Codeforces/A2OJ Ladder 13/llyaAndBankAccount.py
25min
------------------------------------------------------------
2020-05-10 Sun 11:35:42
./Codeforces/A2OJ Ladder 13/puzzles.py
30min
자신의 생각을 고집하지 말고 모든지점에서 실수할수 있다는 가능성을 열어두자
------------------------------------------------------------
2020-05-26 Tue 00:30:40
./Codeforces/A2OJ Ladder 13/ping-pong.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-09 Sat 12:21:18
./Codeforces/A2OJ Ladder 13/chatRoom.py
15min
------------------------------------------------------------
2020-05-20 Wed 19:23:20
./Codeforces/A2OJ Ladder 13/VanyaAndExams.py
 ---- Input Functions ---- 
27min
------------------------------------------------------------
2020-05-02 Sat 15:44:46
./Codeforces/A2OJ Ladder 13/ChossingTeams.py
9min 57sec
------------------------------------------------------------
2020-05-18 Mon 19:44:03
./Codeforces/A2OJ Ladder 13/t-primes.py
 ---- Input Functions ---- 
     Create a boolean array "prime[0..n]" and initialize 
     all entries it as true. A value in prime[i] will 
     finally be false if i is Not a prime, else true. 
         If prime[p] is not changed, then it is a prime 
             Update all multiples of p 
     Print all prime numbers 
------------------------------------------------------------
2020-06-01 Mon 16:30:28
./Codeforces/A2OJ Ladder 13/poloThePenguinAndMatrix.cpp
include <bits/stdc++.h>
------------------------------------------------------------
2020-05-05 Tue 20:30:00
./Codeforces/A2OJ Ladder 13/Presents.py
22min
------------------------------------------------------------
2020-06-01 Mon 15:52:22
./Codeforces/A2OJ Ladder 13/ValeraAndTubes.cpp
include <bits/stdc++.h>
------------------------------------------------------------
2020-05-10 Sun 18:52:53
./Codeforces/A2OJ Ladder 13/PlayingCubes.py
못품 - A번문제에서 풀이가 잘 생각안나는 경우, 변하지 않는 경우를 발견 하는것이 중요하다
------------------------------------------------------------
2020-05-10 Sun 09:17:27
./Codeforces/A2OJ Ladder 13/StringTask.py
15min
------------------------------------------------------------
2020-05-09 Sat 10:49:33
./Codeforces/A2OJ Ladder 13/Twins.py
12min
------------------------------------------------------------
2020-06-01 Mon 13:55:47
./Codeforces/A2OJ Ladder 13/test.cpp
include <bits/stdc++.h>
------------------------------------------------------------
2020-06-03 Wed 14:05:59
./Codeforces/A2OJ Ladder 13/XeniaAndWeights.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-05-18 Mon 18:35:26
./Codeforces/A2OJ Ladder 13/Fence.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-23 Sat 23:21:00
./Codeforces/A2OJ Ladder 13/XeniaandBitOperations.py
 ---- Input Functions ---- 
size = 2 * 2**n  8
segmentTree = [-1]*size  1~7 
initialize 
build segment tree
for i in range(2**n-1,0,-1):  3,2,1
update segment tree
------------------------------------------------------------
2020-05-11 Mon 20:44:57
./Codeforces/A2OJ Ladder 13/cinemaLine.py
37min - 구현력을 테스트 하는 문제
경우를 신중하게 나눠야한다
------------------------------------------------------------
2020-05-07 Thu 08:58:19
./Codeforces/A2OJ Ladder 13/Dubstep.py
5min
------------------------------------------------------------
2020-05-10 Sun 19:44:47
./Codeforces/A2OJ Ladder 13/bigSegment.py
23min 
생각보다 간단한문제
------------------------------------------------------------
2020-05-09 Sat 12:33:50
./Codeforces/A2OJ Ladder 13/Football.py
11min
------------------------------------------------------------
2020-05-31 Sun 20:21:27
./Codeforces/A2OJ Ladder 13/maze.cpp
include <bits/stdc++.h>
        grid[0][i] = '';
        grid[i+1][0] = '';
        grid[i+1][m+1] = '';
        grid[n+1][i] = '';
------------------------------------------------------------
2020-06-02 Tue 14:40:50
./Codeforces/A2OJ Ladder 13/funckyNumbers.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-05-18 Mon 20:41:33
./Codeforces/A2OJ Ladder 13/cutRibbon.py
33min
 ---- Input Functions ---- 
aLoop = int(n/a); bLoop = int(n/b)   [1] [1]
------------------------------------------------------------
2020-05-15 Fri 22:07:56
./Codeforces/A2OJ Ladder 13/cosmicTables.py
codeforce에서 pypy 2.7이 가장 빠르므로 사용하도록 한다.
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-16 Sat 11:03:48
./Codeforces/A2OJ Ladder 13/MashmokhAndACM.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-07 Thu 18:15:37
./Codeforces/A2OJ Ladder 13/magicNumbers.py
15min
현재 알고리즘으로 처리할수 없는 경우가 있는지를 문제를 유심히 보면서 찾을수 있다.
------------------------------------------------------------
2020-05-26 Tue 00:35:11
./Codeforces/A2OJ Ladder 13/factory.py
17min
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-05 Tue 21:44:13
./Codeforces/A2OJ Ladder 13/Team.py
2min 47sec
------------------------------------------------------------
2020-05-07 Thu 18:27:58
./Codeforces/A2OJ Ladder 13/HeadsOrTails.py
11min
------------------------------------------------------------
2020-05-09 Sat 15:06:11
./Codeforces/A2OJ Ladder 13/parallelePiped.py
21min
------------------------------------------------------------
2020-05-11 Mon 18:58:52
./Codeforces/A2OJ Ladder 13/buildingPermutation.py
문제를 정확히 이해하면 풀이가 간단해지는 경우
------------------------------------------------------------
2020-05-28 Thu 23:12:58
./Codeforces/A2OJ Ladder 13/default.py
TIME : 
------------------------------------------------------------
2020-05-09 Sat 09:12:48
./Codeforces/A2OJ Ladder 13/Marks.py
26min - 중구남방으로 생각하지말고 차근차근 확실히 머리속에 그려질때 코딩하자
------------------------------------------------------------
2020-05-10 Sun 09:36:00
./Codeforces/A2OJ Ladder 13/k-string.py
18min
------------------------------------------------------------
2020-05-05 Tue 21:04:03
./Codeforces/A2OJ Ladder 13/softDrinking.py
9m52s
------------------------------------------------------------
2020-06-02 Tue 13:42:22
./Codeforces/A2OJ Ladder 13/Boredom.cpp
include <bits/stdc++.h>
------------------------------------------------------------
2020-05-28 Thu 17:03:25
./Codeforces/A2OJ Ladder 13/maze.py
 ---- Input Functions ---- 
        print('{} {}'.format(r,c))
grid.append(['']*(m+2))
    row = ['']
     for ch in insr():
         if ch == '.':
             cntOfCell+=1
         row.append(ch)
        row.append('')
    row.append('')
grid.append(['']*(m+2))
------------------------------------------------------------
2020-05-24 Sun 23:36:44
./Codeforces/A2OJ Ladder 13/palandromeTransformation.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-06-05 Fri 15:24:33
./Codeforces/A2OJ Ladder 13/littlePonyAndSortByShift.cpp
include <bits/stdc++.h> 
 define ONLINE_JUDGE
    ifndef ONLINE_JUDGE
    endif
------------------------------------------------------------
2020-05-22 Fri 12:39:41
./Codeforces/A2OJ Ladder 13/fixingTypos.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-16 Sat 15:05:09
./Codeforces/A2OJ Ladder 13/Domino.py
관찰로 충분히 풀수 있지 않았을까 하는 아쉬움이남는다,여러가지 경우를 나눠가면서 생각해보기
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-07 Thu 17:57:07
./Codeforces/A2OJ Ladder 13/Permutation.py
11min 55s
------------------------------------------------------------
2020-05-19 Tue 20:18:13
./Codeforces/A2OJ Ladder 13/median.py
15min
 ---- Input Functions ---- 
------------------------------------------------------------
2020-06-03 Wed 22:04:24
./Codeforces/A2OJ Ladder 13/tempCodeRunnerFile.cpp
 // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-05-11 Mon 20:56:04
./Codeforces/A2OJ Ladder 13/rankList.py
20min
------------------------------------------------------------
2020-05-14 Thu 19:59:49
./Codeforces/A2OJ Ladder 13/luckySumOfDigits.py
알고리즘은 거의 맞았으나, 사소한 함수들을 최적화해야 accept되는 문제
------------------------------------------------------------
2020-05-05 Tue 21:05:42
./Codeforces/A2OJ Ladder 13/boyOrGirl.py
6min
------------------------------------------------------------
2020-05-22 Fri 14:39:07
./Codeforces/A2OJ Ladder 13/LCMChallenge.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-15 Fri 21:58:32
./Codeforces/A2OJ Ladder 13/SerejaAndSuffixes.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-24 Sun 18:00:27
./Codeforces/A2OJ Ladder 13/littleGirlAndMaximumSum.py
idea 필요한 문제
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-18 Mon 18:27:55
./Codeforces/A2OJ Ladder 13/llyaAndQueries.py
 ---- Input Functions ---- 
print(dp)
------------------------------------------------------------
2020-05-20 Wed 18:53:48
./Codeforces/A2OJ Ladder 13/CielAndFlowers.py
관찰력이 필요한 문제
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-05 Tue 21:38:42
./Codeforces/A2OJ Ladder 13/dividingOrange.py
31m
------------------------------------------------------------
2020-05-15 Fri 22:22:01
./Codeforces/A2OJ Ladder 13/FreeCash.py
11min
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-25 Mon 23:03:14
./Codeforces/A2OJ Ladder 13/Array.py
idea는 찾았지만 구현이 생각보다 까다로웠다.
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-22 Fri 22:44:02
./Codeforces/A2OJ Ladder 13/CaesarsLegion.py
 ---- Input Functions ---- 
    insert f
    insert h
------------------------------------------------------------
2020-05-13 Wed 18:57:45
./Codeforces/A2OJ Ladder 13/littleGirlAndGame.py
13min
------------------------------------------------------------
2020-06-03 Wed 22:11:04
./Codeforces/A2OJ Ladder 13/PhysicsPractical.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-05-11 Mon 18:29:06
./Codeforces/A2OJ Ladder 13/PashmakAndFlowers.py
diff가 0이되는 케이스를 미처 생각하지 못하여 못한 문제
------------------------------------------------------------
2020-06-01 Mon 10:31:43
./Codeforces/A2OJ Ladder 13/touristProb.py
python operator // : Divides and returns the integer value of the quotient. It dumps the digits after the decimal.
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-11 Mon 19:50:44
./Codeforces/A2OJ Ladder 13/BoysAndGirls.py
20min
------------------------------------------------------------
2020-05-10 Sun 19:02:03
./Codeforces/A2OJ Ladder 13/TwoBagsOfPotatoes.py
13min 
시간복잡도에 대해서 신경쓰지못해서 한번 fail
------------------------------------------------------------
2020-05-07 Thu 08:42:58
./Codeforces/A2OJ Ladder 13/LittleElephantAndChess.py
10min
------------------------------------------------------------
2020-05-14 Thu 20:46:48
./Codeforces/A2OJ Ladder 13/IceSkating.py
dfs를 이용하여 쉽게 풀수있는문제, 구현이 문제가 아니라 아이디어를 연계하는것이 잘 안떠올랐다.
------------------------------------------------------------
2020-05-19 Tue 18:46:01
./Codeforces/A2OJ Ladder 13/countingKangaroosIsFun.py
1h
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-02 Sat 18:27:16
./Codeforces/A2OJ Ladder 13/AmusingJoke.py
20min
dictionary로 hash를 만들때 초기화 값에 유의하자
------------------------------------------------------------
2020-05-28 Thu 15:04:51
./Codeforces/A2OJ Ladder 13/colorStripe.py
 ---- Input Functions ---- 
------------------------------------------------------------
2020-05-06 Wed 22:33:49
./Codeforces/A2OJ Ladder 13/VanyaAndCards.py
26min
------------------------------------------------------------
2020-05-18 Mon 20:37:19
./Codeforces/A2OJ Ladder 13/flippingGame.py
21min
신중하게 생각하고 정확도에 더 신경을 쓰자
 ---- Input Functions ---- 
------------------------------------------------------------
2020-06-12 Fri 12:01:47
./Codeforces/Educational_Rnd_89/a.cpp
include <bits/stdc++.h> 
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-12 Fri 00:51:23
./Codeforces/Educational_Rnd_89/b.cpp
include <bits/stdc++.h> 
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-08 Mon 15:32:53
./Codeforces/div2_648/a.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-08 Mon 15:31:25
./Codeforces/div2_648/b.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-05 Fri 00:32:26
./Codeforces/div2_647/a.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-05 Fri 14:49:50
./Codeforces/div2_647/c.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-05 Fri 01:09:44
./Codeforces/div2_647/b.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-05 Fri 14:42:53
./Codeforces/div2_647/tempCodeRunnerFile.cpp
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-05-02 Sat 11:11:16
./Codeforces/div2_638/b.py
생각하는 과정자체가 수열에 대한 감이 좀 필요하다는 생각이든다
------------------------------------------------------------
2020-06-11 Thu 10:05:03
./Codeforces/A2OJ_Ladder_11/littleElephantAndFunction.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-11 Thu 15:09:42
./Codeforces/A2OJ_Ladder_11/airport.cpp
include <bits/stdc++.h>  
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-11 Thu 21:50:36
./Codeforces/A2OJ_Ladder_11/bicycleChain.cpp
include <bits/stdc++.h>  
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-08 Mon 16:57:21
./Codeforces/A2OJ_Ladder_11/DimaAndFriends.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-18 Thu 11:51:00
./Codeforces/A2OJ_Ladder_11/ShooshunsAndSequence.cpp
include <bits/stdc++.h> 
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-11 Thu 21:19:07
./Codeforces/A2OJ_Ladder_11/Football.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-11 Thu 15:07:50
./Codeforces/A2OJ_Ladder_11/dzyLovesChess2.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-11 Thu 22:31:09
./Codeforces/A2OJ_Ladder_11/businessTrip.cpp
include <bits/stdc++.h>  
------------------------------------------------------------
2020-06-15 Mon 20:19:59
./Codeforces/A2OJ_Ladder_11/JeffAndPeriods.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-15 Mon 22:19:13
./Codeforces/A2OJ_Ladder_11/showerLine.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-09 Tue 11:10:58
./Codeforces/A2OJ_Ladder_11/petrAndBook.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-11 Thu 14:59:43
./Codeforces/A2OJ_Ladder_11/dzyLovesChess.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-18 Thu 13:14:27
./Codeforces/A2OJ_Ladder_11/letter.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-09 Tue 12:23:08
./Codeforces/A2OJ_Ladder_11/Reconnaissance2.cpp
include <bits/stdc++.h> 
    ifndef ONLINE_JUDGE
    endif
------------------------------------------------------------
2020-06-05 Fri 15:55:42
./Codeforces/A2OJ_Ladder_11/isYourHorseShoeOnTheOtherHoof.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-15 Mon 21:37:02
./Codeforces/A2OJ_Ladder_11/sail.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-05 Fri 15:15:02
./Codeforces/A2OJ_Ladder_11/helpfulMaths.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-08 Mon 16:22:55
./Codeforces/A2OJ_Ladder_11/effectiveApproach.cpp
include <bits/stdc++.h>
------------------------------------------------------------
2020-06-11 Thu 15:54:20
./Codeforces/A2OJ_Ladder_11/littleElephantAndRozdil2.cpp
include <bits/stdc++.h>  
------------------------------------------------------------
2020-06-11 Thu 15:18:40
./Codeforces/A2OJ_Ladder_11/evenOdds.cpp
include <bits/stdc++.h>  
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-11 Thu 15:47:54
./Codeforces/A2OJ_Ladder_11/littleElephantAndRozdil.cpp
include <bits/stdc++.h>  
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-11 Thu 21:57:27
./Codeforces/A2OJ_Ladder_11/system.OfEquations.cpp
include <bits/stdc++.h>  
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-18 Thu 12:44:48
./Codeforces/A2OJ_Ladder_11/XeniaAndDivisors.cpp
include <bits/stdc++.h> 
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-06-09 Tue 10:24:12
./Codeforces/A2OJ_Ladder_11/supercentralPoint.cpp
include <bits/stdc++.h> 
------------------------------------------------------------
2020-06-11 Thu 16:14:59
./Codeforces/A2OJ_Ladder_11/hexadecimalsTheorem.cpp
include <bits/stdc++.h>  
------------------------------------------------------------
2020-06-07 Sun 16:25:42
./LeetCode/Weekly 192th/c.py
30min
코드를 더 깔끔하게 작성하여 라인수를 줄이고 더 간결하게 표현할수 있다.
------------------------------------------------------------
2020-06-07 Sun 12:17:10
./LeetCode/Weekly 192th/b.py
res = getStrongest([1,1,3,5,5],2)
res = getStrongest([6,-3,7,2,11],3)
 1 3 5
 6 7 8 11
------------------------------------------------------------
2020-06-06 Sat 21:57:23
./LeetCode/June Challenge/Week1/QueueReconstructionByHeight.py
풀이까지 완벽하게 생각해냈지만, sorting하는 과정에서 실수를 하였다.
검증을 할때 정확하게 내 풀이를 검증해서, 내 풀이를 틀린풀이라고 생각하지 말도록 주의해야겠다.
------------------------------------------------------------
2020-06-06 Sat 12:07:59
./LeetCode/June Challenge/Week1/RandomPickWithWeight.py
1hour 9min 24sec
잘못된 풀이를 떠올린경우, Cracking The Coding Interview에서 비슷한 문제, 최적화를 한번더 시켜야하는 문제
randRange에서 end boundary는 랜덤수 생성에 포함되지 않는다
 Your Solution object will be instantiated and called as such:
 obj = Solution(w)
 param_1 = obj.pickIndex()
------------------------------------------------------------
2020-06-06 Sat 11:39:46
./LeetCode/June Challenge/Week1/reverseString.py
TIME : 07:25
    def reverseString(self, s: List[str]) -> None:
------------------------------------------------------------
2020-06-02 Tue 16:20:51
./LeetCode/June Challenge/Week1/InvertBinaryTree.py
 Definition for a binary tree node.
 class TreeNode:
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
------------------------------------------------------------
2020-06-03 Wed 20:20:39
./LeetCode/June Challenge/Week1/TwoCityScheduling.py
TIME : 20min
    def twoCitySchedCost(self, costs: List[List[int]]) -> int:
------------------------------------------------------------
2020-06-03 Wed 20:03:08
./LeetCode/June Challenge/Week1/DeleteNodeInALinkedList.py
 Definition for singly-linked list.
 class ListNode:
     def __init__(self, x):
         self.val = x
         self.next = None
------------------------------------------------------------
2020-06-07 Sun 19:04:03
./LeetCode/June Challenge/Week1/coinChange2.py
0-1 Knapsack problem과 비슷한 문제
시간복잡도를 고려하지않아서 시간을 낭비하였다.
sub-problem으로 나눌수 있는지가 dp로 풀수있는지 결정하는 기준이다.
------------------------------------------------------------
2020-06-15 Mon 16:19:00
./LeetCode/June Challenge/Week2/searchInABinarySearchTree.py
10min
 Definition for a binary tree node.
------------------------------------------------------------
2020-06-15 Mon 12:07:54
./LeetCode/June Challenge/Week2/CheapestFlightsWithinKStops.py
33min
res = sol.findCheapestPrice(3,[[0,1,100],[1,2,100],[0,2,500]],0,2,0)
res = sol.findCheapestPrice(5,[[4,1,1],[1,2,3],[0,3,2],[0,4,10],[3,1,1],[1,4,3]],2,1,1)
------------------------------------------------------------
2020-06-10 Wed 18:39:05
./LeetCode/June Challenge/Week2/SearchInsertPosition.py
         if target <= nums[i] : return i, else: if i+=1 ; if i >= len(nums): return len(nums)-1
------------------------------------------------------------
2020-06-10 Wed 00:04:26
./LeetCode/June Challenge/Week2/IsSubsequence.py
11min 39sec
------------------------------------------------------------
2020-06-18 Thu 11:09:30
./LeetCode/June Challenge/Week3/surroundedRegiions.py
38min
------------------------------------------------------------
2020-06-16 Tue 18:52:28
./LeetCode/June Challenge/Week3/searchInABinarySearchTree.py
 Definition for a binary tree node.
 class TreeNode:
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
------------------------------------------------------------
2020-06-16 Tue 18:53:07
./LeetCode/June Challenge/Week3/validateIPAddress.py
TIME : 50min
------------------------------------------------------------
2020-04-27 Mon 18:24:50
./LeetCode/Weekly 186th/1424.py
print(findDiagonalOrder([[1,2,3,4,5],[6,7],[8],[9,10,11],[12,13,14,15,16]]))
print(findDiagonalOrder([[1,2,3],[4],[5,6,7],[8],[9,10,11]]))
print(findDiagonalOrder([[3,3,18],[4,15,11],[19,11,14,14,3]]))
------------------------------------------------------------
2020-05-09 Sat 23:59:28
./LeetCode/Weekly 186th/AddTwoNumber.py
1hour 
leetcode 테스트 케이스를 만드는과정이 번거로워 시간이 많이 걸렸다.
또한 생각을 정리하지 않고 짜서 그런지 로직을 좀 어렵게 생각했다.
더 좋은 방법이 있을지 생각하면서 짜자
            print('{} {} {}'.format(num1,num2,num3))
 l1 = ListNode(2)
 l1.next = ListNode(4)
 l1.next.next = ListNode(3)
 l1.next.next.next = ListNode(9)
 l2 = ListNode(5)
 l2.next = ListNode(6)
 l2.next.next = ListNode(4)
 l2.next.next.next = ListNode(1)
------------------------------------------------------------
2020-06-02 Tue 16:21:04
./LeetCode/FirstBadVersion.py
TIME : 
------------------------------------------------------------
2020-05-17 Sun 01:00:27
./LeetCode/Biweekly 26th/c.py
 Definition for a binary tree node.
 class TreeNode:
     def __init__(self, val=0, left=None, right=None):
         self.val = val
         self.left = left
         self.right = right
------------------------------------------------------------
2020-05-10 Sun 14:39:59
./LeetCode/1442.py
xor연산을 최적화하는 지식이 필요한 문제였다
------------------------------------------------------------
2020-05-03 Sun 20:37:24
./AtCoder/ABC165/c.py
48min 41sec
완전탐색으로 통과가 안될거라고 생각하고 넘어간문제, 사실은 완탐으로 가능
------------------------------------------------------------
2020-05-31 Sun 21:34:49
./AtCoder/ABC169/b.cpp
include <bits/stdc++.h>
------------------------------------------------------------
2020-05-31 Sun 21:00:23
./AtCoder/ABC169/a.py
TIME : 
------------------------------------------------------------
2020-06-01 Mon 11:32:29
./AtCoder/ABC169/d.py
문제를 풀때 너무 조급하기도 해서 행간을 읽지 못했다.
생각해보면 그렇게 어려운 문제는 아닌데 여러 예외상황을 생각하기가 쉽지 않은거같다.
TIME : 
------------------------------------------------------------
2020-05-31 Sun 20:59:34
./AtCoder/ABC169/default.py
TIME : 
------------------------------------------------------------
2020-06-01 Mon 10:47:00
./AtCoder/ABC169/c.py
TIME : 
when calculating decimal numbers in python, we should use Decimal library. float has precision error becasue it represents with binary format.
Use __truncate__ when getting integer part of Decimal object. Don't use int().
------------------------------------------------------------
2020-06-01 Mon 10:06:56
./AtCoder/ABC169/b.py
TIME : 
------------------------------------------------------------
2020-05-04 Mon 16:44:20
./AtCoder/ABC166/e.py
문제의 요구조건을 수식으로 표현했을때 풀리는 문제 : j-i = Ai + Aj => i+Ai = j-Aj
------------------------------------------------------------
2020-05-04 Mon 18:49:46
./AtCoder/ABC166/d.py
수에 대한 감각이 필요한 문제같다
------------------------------------------------------------
2020-05-04 Mon 10:55:03
./AtCoder/ABC166/b.py
문제를 침착하게 해석하지 못해 시간이 오래걸렸던 문제
------------------------------------------------------------
2020-06-02 Tue 14:04:54
./template.py
TIME : 
------------------------------------------------------------
2020-06-18 Thu 12:11:18
./cp_template.cpp
include <bits/stdc++.h> 
    // ifndef ONLINE_JUDGE
    // endif
------------------------------------------------------------
2020-04-14 Tue 20:37:17
./KAKAO/2019KAKAO_INTERN/tuple.py
understanding : 2m34s
coding : 51m 30s
total : 53m 30s
------------------------------------------------------------
2020-05-03 Sun 15:23:14
./KAKAO/2019KAKAO_INTERN/crossingBridge.py
2hour
python에서 int는 immutable타입이므로 함수 parameter로 전달하고 리턴되면 함수안에서 했던 작업들이 반영되지 않음
------------------------------------------------------------
2020-05-02 Sat 20:15:49
./KAKAO/2019KAKAO_INTERN/badUser.py
1hour 03min
list는 object 타입임을 유의하자
print(solution(["frodo", "fradi", "crodo", "abc123", "frodoc"], ["fr*d*", "abc1**"]))
print(solution(["frodo", "fradi", "crodo", "abc123", "frodoc"], ["*rodo", "*rodo", "******"]))
------------------------------------------------------------
2020-05-02 Sat 14:20:17
./KAKAO/2020KAKAO_REQRUIT/movingBlock.py
2h 04min
------------------------------------------------------------
2020-04-21 Tue 21:18:45
./KAKAO/2020KAKAO_REQRUIT/columnAndRow.py
print(solution(5,[[1,0,0,1],[1,1,1,1],[2,1,0,1],[2,2,1,1],[5,0,0,1],[5,1,0,1],[4,2,1,1],[3,2,1,1]]))
------------------------------------------------------------
2020-04-27 Mon 18:47:31
./KAKAO/2020KAKAO_REQRUIT/wallCheck.py
res에 index를 대상으로 중복검사를 해야하는데, dist[idx] 값을 대상으로 검사해서 해맸다
print(solution(12,[1, 5, 6, 10],[1, 2, 3, 4]))
print(solution(12,[1, 3, 4, 9, 10],[3, 5, 7]))
print(solution(50, [1, 5, 10, 12, 22, 25], [3,4,6]))
print(solution(50,[1],[6]))
------------------------------------------------------------
2020-04-22 Wed 21:33:21
./KAKAO/2020KAKAO_REQRUIT/lock.py
2hour 15m
print(getLockWithPadding([[1, 1, 1], [1, 1, 0], [1, 0, 1]],3,3))
print(getKeyWithPadding([[0, 0, 0], [1, 0, 0], [0, 1, 1]],3,3,1,0))
------------------------------------------------------------
2020-05-07 Thu 19:34:11
./KAKAO/2020KAKAO_REQRUIT/lyricsSearch.py
1hour 04min : 2018년 문제에서 배운지식으로 응용하여 풀수 있었다.
TRIE로 구현
     printNode(root1,'parent')
     print('==================')
     printNode(root2,'parent')
            print('ch : {} , value : {}'.format(ch,cur.value))
------------------------------------------------------------
2020-04-18 Sat 21:35:14
./KAKAO/2018KAKAO_REQRUIT/chuseok.py
print(solution(["2016-09-15 01:00:04.001 2.0s","2016-09-15 01:00:07.000 2s"
]))
------------------------------------------------------------
2020-04-16 Thu 20:45:58
./KAKAO/2018KAKAO_REQRUIT/njinsu.py
planning : 15m 50s
coding : 45m
total : 1h
------------------------------------------------------------
2020-04-16 Thu 22:12:02
./KAKAO/2018KAKAO_REQRUIT/sortFile.py
planning : 7m 44
coding : 
total : 20min+
    head - number - tail로 나누는 re
    head, number, 원본으로 저장
    정렬한 후 list 출력
------------------------------------------------------------
2020-04-18 Sat 13:02:50
./KAKAO/2018KAKAO_REQRUIT/compression.py
plan : 8m 52s
coding : 52m
total : 1h
------------------------------------------------------------
2020-04-15 Wed 15:06:03
./KAKAO/2018KAKAO_REQRUIT/cache.py
understanding & plan : 10min 50s
coding : 18m 41
total : 29m 31s
------------------------------------------------------------
2020-04-12 Sun 19:18:53
./KAKAO/2018KAKAO_REQRUIT/dart.py
understanding : 11min
coding : 33min
total : 45min
    option = {'' : 1, '*' : 2, '' : -1}
    p = re.compile('(\d+)([SDT])([*]?)')
        elif dartResult[i] == '':
dartResult = '1D2S10S'
------------------------------------------------------------
2020-04-19 Sun 16:49:47
./KAKAO/2018KAKAO_REQRUIT/shuttle.py
print(solution(1, 1, 5, ["08:00", "08:01", "08:02", "08:03"]))
print(solution(	2, 10, 2, ["09:10", "09:09", "08:00"]))
------------------------------------------------------------
2020-04-18 Sat 14:47:57
./KAKAO/2018KAKAO_REQRUIT/music.py
    musicStr = musicStr.replace('C','c')
    musicStr = musicStr.replace('D','d')
    musicStr = musicStr.replace('F','f')
    musicStr = musicStr.replace('G','g')
    musicStr = musicStr.replace('A','a')
print(solution("ABCDEFG",["12:00,12:14,HELLO,CDEFGAB", "13:00,13:05,WORLD,ABCDEF"]))
print(solution("CCBCCBCCBCCB", ["03:00,03:30,FOO,CCB", "04:00,04:08,BAR,CCBCCBCCB"]))
print(solution("ABC", ["12:00,12:14,HELLO,CDEFGAB", "13:00,13:05,WORLD,ABCDEF"]))
------------------------------------------------------------
2020-04-12 Sun 17:20:39
./KAKAO/2018KAKAO_REQRUIT/map.py
understanding : 3min
coding : 27min 
total : 30min
                str+=''
        a12=a12.replace('1','')
------------------------------------------------------------
2020-05-05 Tue 20:25:41
./KAKAO/2018KAKAO_REQRUIT/autoCompletion.py
TRIE로 구현
                print('ch : {} , else block : {}'.format(ch,temp.value))
            print('{} {}'.format(ch,cnt))
 정렬후 양쪽비교 하는 방식으로 구현한 알고리즘
print(solution(["abc", "def", "ghi", "jklm"]))
print(solution(["word", "war", "warrior", "world"]))
------------------------------------------------------------
2020-05-28 Thu 23:35:16
./KAKAO/2018KAKAO_REQRUIT/block.py
understanding : 2min
coding : 
total : 
print(solution(8,2, ["AA", "AA", "CC", "AA", "AA", "DD"]))
------------------------------------------------------------
2020-04-14 Tue 22:20:55
./KAKAO/2018KAKAO_REQRUIT/news.py
understanding : 3m 51s
coding : 52m
total : 55m 19s
------------------------------------------------------------
2020-04-25 Sat 17:43:10
./KAKAO/2019KAKAO_RECRUIT/matchingScore.py
        url = head.split('og:url')[1].split('content=\"')[1].split("\"")[0]
print(solution("blind",["<html lang=\"ko\" xml:lang=\"ko\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta property=\"og:url\" content=\"https://a.com\"/>\n</head>  \n<body>\nBlind Lorem Blind ipsum dolor Blind test sit amet, consectetur adipiscing elit. \n<a href=\"https://b.com\"> Link to b </a>\n</body>\n</html>", "<html lang=\"ko\" xml:lang=\"ko\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta property=\"og:url\" content=\"https://b.com\"/>\n</head>  \n<body>\nSuspendisse potenti. Vivamus venenatis tellus non turpis bibendum, \n<a href=\"https://a.com\"> Link to a </a>\nblind sed congue urna varius. Suspendisse feugiat nisl ligula, quis malesuada felis hendrerit ut.\n<a href=\"https://c.com\"> Link to c </a>\n</body>\n</html>", "<html lang=\"ko\" xml:lang=\"ko\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta property=\"og:url\" content=\"https://c.com\"/>\n</head>  \n<body>\nUt condimentum urna at felis sodales rutrum. Sed dapibus cursus diam, non interdum nulla tempor nec. Phasellus rutrum enim at orci consectetu blind\n<a href=\"https://a.com\"> Link to a </a>\n</body>\n</html>"]))
print(solution("Muzi",["<html lang=\"ko\" xml:lang=\"ko\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta property=\"og:url\" content=\"https://careers.kakao.com/interview/list\"/>\n</head>  \n<body>\n<a href=\"https://programmers.co.kr/learn/courses/4673\"></a>!MuziMuzi!)jayg07con&&\n\n</body>\n</html>", "<html lang=\"ko\" xml:lang=\"ko\" xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta property=\"og:url\" content=\"https://www.kakaocorp.com\"/>\n</head>  \n<body>\ncon%\tmuzI92apeach&2<a href=\"https://hashcode.co.kr/tos\"></a>\n\n\t^\n</body>\n</html>"]))
------------------------------------------------------------
2020-05-04 Mon 20:44:13
./KAKAO/2019KAKAO_RECRUIT/blockGame.py
1h 30m
잘못된 가정을 찾는것이 런타임에러 해결의 핵심이다. 이 문제의 경우에 블럭의 번호가 1부터 순차적으로 부여된다고 내가 가정을 해서 50분만에 풀수있는 문제를 1시간 반동안 붙잡고 있었다.
문제를 다시 정확히 읽는것이 중요하다
dictionary는 루프도중 값을 제거하는것이 불가능하다
------------------------------------------------------------
2020-04-15 Wed 16:29:16
./KAKAO/2019KAKAO_RECRUIT/openChat.py
planning : 10m 52s
coding : 36m
total : 46m 30s
------------------------------------------------------------
2020-05-05 Tue 18:14:39
./KAKAO/2019KAKAO_RECRUIT/live.py
최적화 아이디어가 잘 생각이 안나던 문제
거의 같으나 좀더 직관적인 풀이
------------------------------------------------------------
2020-04-15 Wed 20:05:02
./KAKAO/2019KAKAO_RECRUIT/candidate.py
planning : 13m 52
------------------------------------------------------------
2020-04-19 Sun 09:37:46
./KAKAO/2019KAKAO_RECRUIT/pathFinding.py
sys.setrecursionlimit(10**6)  increase recursion stack level
------------------------------